• Hệ thống lớp generic là một cách để xây dựng các lớp có thể làm việc với 
nhiều kiểu dữ liệu khác nhau mà không cần phải triển khai lại cùng một logic 
cho mỗi kiểu dữ liệu đó. 
• Generic class hierarchies (hệ thống lớp generic) cho phép chúng ta xây dựng 
một hệ thống các lớp generic có quan hệ kế thừa, giống như các lớp không generic.

• Trong hệ thống lớp generic, một lớp generic có thể làm việc như một lớp cha 
(superclass) hoặc là một lớp con (subclass). Điểm khác biệt chính giữa hệ thống 
lớp generic và hệ thống lớp không generic là trong hệ thống lớp generic, 
bất kỳ đối số kiểu (type arguments) nào cần thiết bởi một lớp cha generic 
cần được truyền lên trong hệ thống lớp thông qua tất cả các lớp con.

• Ví dụ, ta có thể xây dựng một lớp generic cha là `Container<T>` đại diện cho 
một container chứa một đối tượng kiểu T. Sau đó, ta có thể tạo ra các lớp con 
generic như `Box<T>` và `List<T>` kế thừa từ lớp cha `Container<T>`. 
Các lớp con này có thể cung cấp một triển khai cụ thể cho kiểu dữ liệu T mà chúng đại diện.

• Sử dụng hệ thống lớp generic, ta có thể tái sử dụng logic chung và áp dụng 
nó cho nhiều kiểu dữ liệu khác nhau một cách linh hoạt và an toàn về kiểu.