Lấy trạng thái của một Thread

Như đã đề cập trước đó trong chương này, một Thread có thể tồn tại trong một số trạng thái khác nhau. 
Bạn có thể lấy trạng thái hiện tại của một Thread bằng cách gọi phương thức getState() được định nghĩa bởi Thread. 
Phương thức này được định nghĩa như sau:

Thread.State getState()

Nó trả về một giá trị của kiểu Thread.State thể hiện trạng thái của Thread vào thời điểm gọi phương thức. 
State là một đối tượng liệt kê được định nghĩa bởi Thread. 
(Một đối tượng liệt kê là một danh sách các hằng số có tên. Nó được thảo luận chi tiết trong Chương 12.) 
Đây là các giá trị có thể được trả về bởi getState():

Có 6 trạng thái state của một thread trong Java:

1. NEW: Thread mới được tạo nhưng chưa bắt đầu thực thi.
2. RUNNABLE: Thread đang thực thi hoặc đang sẵn sàng để thực thi tại một thời điểm cụ thể, 
tuy nhiên nó có thể bị gián đoạn bất cứ lúc nào để thực thi một thread khác.
3. BLOCKED: Thread bị chặn khi đang chờ một monitor lock để tiếp tục thực thi. 
Khi monitor lock này đã được giải phóng, thread sẽ chuyển đổi sang trạng thái RUNNABLE và có thể tiếp tục thực thi.
4. WAITING: Thread đang chờ vô thời hạn cho một thread khác để thực hiện một hoạt động cụ thể. 
Thread trong trạng thái này có thể được báo thức để thực thi bởi một notify() hoặc notifyAll() từ thread khác.
5. TIMED_WAITING: Thread đang chờ trong một khoảng thời gian nhất định cho một hoạt động cụ thể để thực hiện. 
Thread trong trạng thái này có thể được báo thức để thực thi bởi một notify() hoặc notifyAll() 
từ thread khác hoặc bởi kết thúc thời gian chờ.
6. TERMINATED: Thread đã kết thúc thực thi của nó hoặc bị hủy.

Việc theo dõi trạng thái của thread là quan trọng để điều khiển quá trình thực thi của chúng. 
Chẳng hạn, nếu một thread đang chờ vô thời hạn để thực hiện một hoạt động nhất định, 
các thread khác có thể được phép thực thi để tránh các sự cố về deadlock hoặc starvation.

Nếu có một instance của Thread, bạn có thể sử dụng phương thức getState() để lấy trạng thái của một luồng. 
Ví dụ, chuỗi sau đây xác định nếu một luồng 
được gọi là thrd đang ở trạng thái RUNNABLE khi getState() được gọi:

Thread.State ts = thrd.getState();
if(ts == Thread.State.RUNNABLE) // ...

Quan trọng là hiểu rằng trạng thái của một luồng có thể thay đổi sau khi gọi getState(). 
Do đó, tùy thuộc vào tình huống, trạng thái được lấy bằng cách gọi getState() có thể 
không phản ánh trạng thái thực tế của luồng chỉ trong một khoảnh khắc sau đó. 
Vì lý do này (và những lý do khác), getState() không được dùng để đồng bộ hóa các luồng. 
Nó chủ yếu được sử dụng cho mục đích gỡ lỗi hoặc cho việc phân tích các đặc tính thời gian chạy của một luồng.