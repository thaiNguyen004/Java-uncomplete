Sẽ có những lúc bạn muốn định nghĩa một thành viên lớp mà sẽ được sử dụng độc lập 
với bất kỳ đối tượng của lớp đó. Thông thường, một thành viên lớp phải được truy cập 
chỉ khi kết hợp với một đối tượng của lớp đó. Tuy nhiên, có thể tạo một thành viên mà 
có thể được sử dụng độc lập, mà không cần tham chiếu đến một phiên bản cụ thể nào. 
Để tạo một thành viên như vậy, đặt từ khóa static trước khai báo của nó. Khi một thành viên 
được khai báo là static, nó có thể được truy cập trước khi bất kỳ đối tượng nào của lớp được tạo ra 
và không cần tham chiếu đến bất kỳ đối tượng nào. Bạn có thể khai báo cả phương thức và biến để là static.
Ví dụ phổ biến nhất của một thành viên static là main(). main() được khai báo là static 
vì nó phải được gọi trước khi bất kỳ đối tượng nào tồn tại.

Các biến thể hiện được khai báo là static, thực chất là các biến toàn cục. 
Khi đối tượng của lớp được khai báo, không có bản sao của biến static được tạo ra. 
Thay vào đó, tất cả các phiên bản của lớp chia sẻ cùng một biến static.

Các phương thức được khai báo là static có một số hạn chế:
• Chúng chỉ có thể gọi trực tiếp các phương thức static khác của lớp của chúng.
• Chúng chỉ có thể truy cập trực tiếp các biến static của lớp của chúng.
• Chúng không thể tham chiếu đến từ khóa this hoặc super bất kỳ cách nào. 
Nếu bạn cần tính toán để khởi tạo các biến static của mình, bạn có thể khai báo 
một khối static được thực thi đúng một lần, khi lớp được tải lần đầu tiên. 

Ví dụ sau đây cho thấy một lớp có một phương thức static, một số biến static và một khối khởi tạo static.
file example.java